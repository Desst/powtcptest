// Code generated by MockGen. DO NOT EDIT.
// Source: powtcptest/internal/tcp/server (interfaces: QuotesCollection)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// QuotesCollection is a mock of QuotesCollection interface.
type QuotesCollection struct {
	ctrl     *gomock.Controller
	recorder *QuotesCollectionMockRecorder
}

// QuotesCollectionMockRecorder is the mock recorder for QuotesCollection.
type QuotesCollectionMockRecorder struct {
	mock *QuotesCollection
}

// NewQuotesCollection creates a new mock instance.
func NewQuotesCollection(ctrl *gomock.Controller) *QuotesCollection {
	mock := &QuotesCollection{ctrl: ctrl}
	mock.recorder = &QuotesCollectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *QuotesCollection) EXPECT() *QuotesCollectionMockRecorder {
	return m.recorder
}

// GetRandomQuote mocks base method.
func (m *QuotesCollection) GetRandomQuote() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandomQuote")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRandomQuote indicates an expected call of GetRandomQuote.
func (mr *QuotesCollectionMockRecorder) GetRandomQuote() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandomQuote", reflect.TypeOf((*QuotesCollection)(nil).GetRandomQuote))
}
